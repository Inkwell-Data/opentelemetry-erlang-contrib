name: Elixir

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  labels:
    runs-on: ubuntu-latest
    outputs:
      labels: ${{ steps.extract-labels.output.labels }}
    steps:
      - id: extract-labels
        run: |
          echo "::set-output name=labels::${{ github.event.pull_request.labels.*.name }}"
  test-matrix:
    needs: labels
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.content }}
    steps:
      - uses: actions/checkout@v2
      - name: Set matrix
        id: set-matrix
        run: |
          JSON=$(cat ./test-matrix.json)
          LABELS=${{ needs.labels.output.labels }}
          echo "::set-output name=matrix::$(jq -r '. + {app: [.apps[] as $x | $LABELS[] | select($x == .)]}'"
  test:
    needs: [labels, test-matrix]
    if: (contains(needs.labels.outputs.labels, 'elixir') && contains(needs.labels.outputs.labels, 'instrumentation')
    defaults:
      run:
        working-directory: instrumentation/${{ matrix.app }}
    runs-on: ubuntu-18.04
    name: ${{ matrix.app }} test on Elixir ${{ matrix.elixir_version }} (OTP ${{ matrix.otp_version }})
    strategy:
      fail-fast: false
      matrix: ${{ needs.test-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: ${{ matrix.elixir_version }}
          rebar3-version: ${{ matrix.rebar3_version }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ matrix.app }}/deps
            ${{ matrix.app }}/_build
          key: ${{ runner.os }}-build-${{ matrix.otp_version }}-${{ matrix.elixir_version }}-v3-${{ hashFiles(format('{0}{1}', github.workspace, 'instrumentation/${{ matrix.app }}/mix.lock')) }}
      - name: Fetch deps
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Compile project
        run: mix compile --warnings-as-errors
      - name: Check formatting
        run: mix format --check-formatted
      - name: Test
        working-directory: ${{ matrix.app }}
        run: mix test --warnings-as-errors
